{"version":3,"sources":["features/songs/details/SongDetailsSkeleton.tsx","features/songs/details/YouTubePlayerSkeleton.tsx","features/songs/lyrics/LyricsSectionSkeleton.tsx","features/songs/lyrics/LyricsDisplaySkeleton.tsx","features/songs/list/SongListSkeleton.tsx","app/RouteSwitch.tsx","common/ProgressBar.tsx","common/layout/Header.tsx","common/layout/Layout.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SongDetailsSkeleton","PageContainer","SongContainer","SongDetailsContainer","SongTitle","LyricsContainer","UpcomingContainer","UpcomingSong","styled","div","YouTubePlayerSkeleton","LyricsSectionSkeleton","Container","LyricsLanguageMenu","Array","from","keys","map","i","LyricsLanguageMenuItem","LyricsDisplaySkeleton","Block","width","height","props","SongListSkeleton","SongListItem","SongListPage","lazy","SongDetailPage","RouteSwitch","exact","path","fallback","ProgressBar","active","progress","keyframes","css","Header","HomeLink","to","Link","Layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.493aebd9.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { YouTubePlayerSkeleton } from './YouTubePlayerSkeleton';\nimport { LyricsSectionSkeleton } from '../lyrics/LyricsSectionSkeleton';\n\nexport function SongDetailsSkeleton() {\n  return (\n    <PageContainer>\n      <SongContainer>\n        <YouTubePlayerSkeleton />\n\n        <SongDetailsContainer>\n          <SongTitle />\n          <LyricsContainer>\n            <LyricsSectionSkeleton />\n          </LyricsContainer>\n        </SongDetailsContainer>\n      </SongContainer>\n      <UpcomingContainer>\n        <UpcomingSong />\n        <UpcomingSong />\n        <UpcomingSong />\n        <UpcomingSong />\n        <UpcomingSong />\n      </UpcomingContainer>\n    </PageContainer>\n  );\n}\n\nexport const PageContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const SongContainer = styled.div`\n  width: 70%;\n  margin-right: 20px;\n`;\n\nexport const SongDetailsContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst SongTitle = styled.div`\n  margin-top: 10px;\n  background: #292929;\n  width: 200px;\n  height: 30px;\n`;\n\nexport const LyricsContainer = styled.div`\n  width: 500px;\n  margin-top: 20px;\n`;\n\nexport const UpcomingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n`;\n\nexport const UpcomingSong = styled.div`\n  width: 100%;\n  height: 150px;\n  background: #292929;\n  margin-bottom: 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const YouTubePlayerSkeleton = styled.div`\n  padding-bottom: 56.25%; /* 16:9 */\n  width: 100%;\n  height: 0;\n  overflow: hidden;\n  background: #292929;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { LyricsDisplaySkeleton } from './LyricsDisplaySkeleton';\n\nexport function LyricsSectionSkeleton() {\n  return (\n    <Container>\n      <LyricsLanguageMenu>\n        {Array.from(Array(2).keys()).map((i) => (\n          <LyricsLanguageMenuItem key={i} />\n        ))}\n      </LyricsLanguageMenu>\n      <LyricsDisplaySkeleton />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LyricsLanguageMenu = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nconst LyricsLanguageMenuItem = styled.div`\n  width: 70px;\n  height: 41px;\n  background: #292929;\n  margin-right: 15px;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nexport function LyricsDisplaySkeleton() {\n  return (\n    <Container>\n      {Array.from(Array(30).keys()).map((i) => (\n        <Block key={i} width={350} height={24} />\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: block;\n`;\n\ninterface BlockProps {\n  width: number;\n  height: number;\n}\n\nconst Block = styled.div<BlockProps>`\n  background: #292929;\n  width: ${(props) => `${props.width}px`};\n  height: ${(props) => `${props.height}px`};\n  margin-bottom: 8px;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nexport function SongListSkeleton() {\n  return (\n    <Container>\n      {Array.from(Array(100).keys()).map((i) => (\n        <SongListItem key={i} />\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 20px;\n`;\n\nconst SongListItem = styled.div`\n  background: #292929;\n  width: 200px;\n  height: 47px;\n`;\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { SongListSkeleton } from 'features/songs/list/SongListSkeleton';\nimport { SongDetailsSkeleton } from 'features/songs/details/SongDetailsSkeleton';\n\nconst SongListPage = lazy(() => import('features/songs/list/SongListPage'));\nconst SongDetailPage = lazy(\n  () => import('features/songs/details/SongDetailsPage')\n);\n\nexport function RouteSwitch() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Suspense fallback={<SongListSkeleton />}>\n          <SongListPage />\n        </Suspense>\n      </Route>\n      <Route exact path=\"/songs/:songId\">\n        <Suspense fallback={<SongDetailsSkeleton />}>\n          <SongDetailPage />\n        </Suspense>\n      </Route>\n    </Switch>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { keyframes, css } from '@emotion/react';\n\ninterface ProgressBarProps {\n  active: boolean;\n}\n\nexport function ProgressBar({ active = false }: ProgressBarProps) {\n  return <Container active={active} />;\n}\n\ninterface ContainerProps {\n  active: boolean;\n}\n\nconst progress = keyframes`\n  0% {\n    transform: scaleX(0);\n  }\n\n  10% {\n    transform: scaleX(0.3);\n  }\n\n  50% {\n    transform: scaleX(0.7);\n  }\n\n  90% {\n    transform: scaleX(0.8);\n  }\n\n  100% {\n    transform: scaleX(1);\n  }\n`;\n\nconst Container = styled.div<ContainerProps>`\n  position: fixed;\n  height: 3px;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  transform: scaleX(0);\n  transform-origin: left center;\n  transition: transform ease-in 300ms, opacity ease-in 300ms;\n  transition-delay: 0;\n  background-color: rgb(245, 67, 145);\n  opacity: ${(props) => (props.active ? 1 : 0)};\n  animation-fill-mode: forwards;\n  animation: ${(props) =>\n    props.active &&\n    css`\n      ${progress} 2s cubic-bezier(0.4, 0.45, 0.6, 0.55) infinite;\n    `};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nimport { ProgressBar } from '../ProgressBar';\n\nexport function Header() {\n  const loadingRoute = false;\n  return (\n    <Container>\n      <ProgressBar active={loadingRoute ? true : false} />\n      <HomeLink to=\"/\">Cantopop</HomeLink>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  font-size: 16px;\n  background: #0e0e0e;\n  color: #d9d9de;\n  padding: 20px 40px;\n`;\n\nconst HomeLink = styled(Link)`\n  color: #d9d9de;\n  text-decoration: none;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { RouteSwitch } from 'app/RouteSwitch';\nimport { Header } from './Header';\n\nexport function Layout() {\n  return (\n    <Container>\n      <Header />\n      <PageContainer>\n        <RouteSwitch />\n      </PageContainer>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  background: #000;\n  color: #d9d9de;\n  min-height: 100vh;\n`;\n\nconst PageContainer = styled.div`\n  padding: 30px 40px;\n`;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Layout } from 'common/layout/Layout';\n\nfunction App() {\n  return (\n    <Router>\n      <Layout />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}