{"version":3,"sources":["features/songs/songsAPI.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","features/songs/list/SongListItem.tsx","features/songs/list/SongListPage.tsx","features/songs/list/useSongList.ts"],"names":["timeout","ms","Promise","resolve","setTimeout","songsAPI","fetchAll","fetch","process","res","json","fetchById","songId","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","SongListItem","id","title","artist","LinkContainer","to","SongTitle","SongArtist","styled","Link","h1","span","SongListPage","data","useSWR","a","suspense","map","song","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"oKAAA,SAASA,EAAQC,GACf,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,MAG/C,IAAMI,EAAW,CAChBC,SADgB,WACJ,OAAD,4HACTN,EAAQ,MADC,uBAEGO,MAAM,GAAD,OAAIC,kCAAJ,YAFR,cAETC,EAFS,gBAGIA,EAAIC,OAHR,cAGTA,EAHS,yBAIRA,GAJQ,8CAMXC,UAPgB,SAONC,GAAiB,OAAD,4HACxBZ,EAAQ,MADgB,uBAEZO,MAAM,GAAD,OAClBC,kCADkB,kBAC0BI,EAD1B,MAFO,cAExBH,EAFwB,gBAKXA,EAAIC,OALO,cAKxBA,EALwB,yBAMvBA,GANuB,gD,gCCXnB,SAASG,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,E,yICHF,SAASQ,EAAT,GAAiE,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,OACxC,OACE,eAACC,EAAD,CAAeC,GAAE,iBAAYJ,GAA7B,UACE,cAACK,EAAD,UAAYJ,IACZ,cAACK,EAAD,UAAaJ,OAKnB,IAAMC,EAAgBI,YAAOC,IAAPD,CAAH,oHAObF,EAAYE,IAAOE,GAAV,kFAMTH,EAAaC,IAAOG,KAAV,+CC3BT,SAASC,IAAgB,IACtBC,ECSDC,YAAO,QAAD,sBAEX,sBAAAC,EAAA,sEACe3C,IAASC,WADxB,mFAGA,CAAE2C,UAAU,IDdNH,KAER,OACE,8BACGA,EAAKI,KAAI,SAACC,GAAD,OACR,cAAClB,EFKM,SAAwBmB,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACN/B,EAAQL,OAAOuC,IAAS,GAAMC,SAAQ,SAAU1C,GAC9C,EAAeqC,EAAQrC,EAAKyC,EAAOzC,OAE5BE,OAAOyC,0BAChBzC,OAAO0C,iBAAiBP,EAAQnC,OAAOyC,0BAA0BF,IAEjElC,EAAQL,OAAOuC,IAASC,SAAQ,SAAU1C,GACxCE,OAAOC,eAAekC,EAAQrC,EAAKE,OAAOa,yBAAyB0B,EAAQzC,OAKjF,OAAOqC,EEtBD,IAAgCD,GAAbA,EAAKjB,SAMjBW","file":"static/js/5.2c87c65a.chunk.js","sourcesContent":["function timeout(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const songsAPI = {\n  async fetchAll() {\n    await timeout(1500);\n    const res = await fetch(`${process.env.REACT_APP_API_BASE_URL}/songs/`);\n    const json = await res.json();\n    return json;\n  },\n  async fetchById(songId: string) {\n    await timeout(1500);\n    const res = await fetch(\n      `${process.env.REACT_APP_API_BASE_URL}/songs/${songId}/`\n    );\n    const json = await res.json();\n    return json;\n  },\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\ninterface SongListItemProps {\n  id: string;\n  title: string;\n  artist: string;\n}\n\nexport function SongListItem({ id, title, artist }: SongListItemProps) {\n  return (\n    <LinkContainer to={`/songs/${id}`}>\n      <SongTitle>{title}</SongTitle>\n      <SongArtist>{artist}</SongArtist>\n    </LinkContainer>\n  );\n}\n\nconst LinkContainer = styled(Link)`\n  display: flex;\n  width: 200px;\n  text-decoration: none;\n  flex-direction: column;\n`;\n\nconst SongTitle = styled.h1`\n  font-size: 16px;\n  color: #fff;\n  margin-top: 0;\n`;\n\nconst SongArtist = styled.span`\n  color: #d9d9de;\n`;\n","import React from 'react';\n\nimport { useSongList } from './useSongList';\nimport { SongListItem } from './SongListItem';\n\nexport function SongListPage() {\n  const { data } = useSongList();\n\n  return (\n    <div>\n      {data.map((song) => (\n        <SongListItem key={song.id} {...song} />\n      ))}\n    </div>\n  );\n}\n\nexport default SongListPage;\n","import useSWR, { SWRResponse } from 'swr';\n\nimport { songsAPI } from 'features/songs/songsAPI';\n\ninterface Song {\n  id: string;\n  artist: string;\n  title: string;\n}\n\ninterface SuspenseResponseInterface extends SWRResponse<Song[], any> {\n  data: Song[];\n}\n\nexport const useSongList = () => {\n  return useSWR(\n    `songs`,\n    async () => {\n      return await songsAPI.fetchAll();\n    },\n    { suspense: true }\n  ) as SuspenseResponseInterface;\n};\n"],"sourceRoot":""}