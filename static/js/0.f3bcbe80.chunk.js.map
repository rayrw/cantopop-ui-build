{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/swr/esm/libs/deep-equal.js","../node_modules/swr/esm/libs/hash.js","../node_modules/swr/esm/cache.js","../node_modules/swr/esm/libs/web-preset.js","../node_modules/swr/esm/config.js","../node_modules/swr/esm/env.js","../node_modules/swr/esm/swr-config-context.js","../node_modules/swr/esm/use-swr.js","../node_modules/swr/esm/index.js","../node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","has","Object","prototype","hasOwnProperty","table","WeakMap","counter","Cache","initialData","cache","Map","entries","subs","get","_key","serializeKey","set","notify","keys","Array","from","clear","delete","isArray","length","i","_hash","String","hash","subscribe","listener","_this","Error","isSubscribed","push","index","indexOf","_i","_a","online","isOnline","isDocumentVisible","document","visibilityState","fetcher","url","fetch","res","json","registerOnFocus","cb","window","addEventListener","registerOnReconnect","__assign","assign","t","s","n","p","call","slowConnection","navigator","effectiveType","defaultConfig","onLoadingSlow","onSuccess","onError","onErrorRetry","_","__","config","revalidate","opts","errorRetryCount","retryCount","count","Math","min","timeout","random","errorRetryInterval","setTimeout","focusThrottleInterval","dedupingInterval","loadingTimeout","refreshInterval","revalidateOnFocus","revalidateOnReconnect","refreshWhenHidden","refreshWhenOffline","shouldRetryOnError","suspense","compare","deepEqual","foo","bar","ctor","len","constructor","Date","getTime","RegExp","toString","isPaused","webPreset","IS_SERVER","Deno","version","deno","rAF","f","useIsomorphicLayoutEffect","useEffect","useLayoutEffect","SWRConfigContext","createContext","displayName","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","e","rejected","result","__generator","body","y","g","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","CONCURRENT_PROMISES","CONCURRENT_PROMISES_TS","FOCUS_REVALIDATORS","RECONNECT_REVALIDATORS","CACHE_REVALIDATORS","MUTATION_TS","MUTATION_END_TS","now","ts","revalidate_1","revalidators","trigger","shouldRevalidate","keyErr","keyValidating","updaters","currentData","currentError","currentIsValidating","promises","all","broadcastState","data","isValidating","mutate","_data","beforeMutationTs","beforeConcurrentPromisesTs","isAsyncMutation","err_1","shouldAbort","_b","defineProperty","Provider","useSWR","useContext","fnArgs","configRef","useRef","current","willRevalidateOnMount","revalidateOnMount","resolveData","cachedData","resolveIsValidating","initialError","initialIsValidating","stateDependencies","stateRef","useDebugValue","latestData","latestError","rerender","useState","dispatch","useCallback","payload","shouldUpdateState","k","unmountedRef","initialMountedRef","keyRef","eventsCallback","event","params","boundMutate","addRevalidator","callback","keyedRevalidators","revalidateOpts","dedupe","loading","shouldDeduping","newData","startAt","newState","err_2","_c","isUpdating","currentHookData","latestKeyedData","softRevalidate","pending","unsubFocus","unsubReconnect","unsubUpdate","updatedData","updatedError","updatedIsValidating","needUpdate","timer","tick","clearTimeout","memoizedState","useMemo","state","defineProperties","enumerable","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","create","context","Context","_invoke","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","isGeneratorFunction","genFun","name","mark","setPrototypeOf","__proto__","awrap","async","iter","object","reverse","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/0.f3bcbe80.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * deep equal lite version from dequal\n * https://github.com/lukeed/dequal/blob/master/license\n */\nvar has = Object.prototype.hasOwnProperty;\nexport default function deepEqual(foo, bar) {\n    var ctor, len;\n    if (foo === bar)\n        return true;\n    if (foo && bar && (ctor = foo.constructor) === bar.constructor) {\n        if (ctor === Date)\n            return foo.getTime() === bar.getTime();\n        if (ctor === RegExp)\n            return foo.toString() === bar.toString();\n        if (ctor === Array) {\n            if ((len = foo.length) === bar.length) {\n                while (len-- && deepEqual(foo[len], bar[len]))\n                    ;\n            }\n            return len === -1;\n        }\n        if (!ctor || typeof foo === 'object') {\n            len = 0;\n            for (ctor in foo) {\n                if (has.call(foo, ctor) && ++len && !has.call(bar, ctor))\n                    return false;\n                if (!(ctor in bar) || !deepEqual(foo[ctor], bar[ctor]))\n                    return false;\n            }\n            return Object.keys(bar).length === len;\n        }\n    }\n    return foo !== foo && bar !== bar;\n}\n","// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nvar table = new WeakMap();\n// counter of the key\nvar counter = 0;\n// hashes an array of objects and returns a string\nexport default function hash(args) {\n    if (!args.length)\n        return '';\n    var key = 'arg';\n    for (var i = 0; i < args.length; ++i) {\n        if (args[i] === null) {\n            key += '@null';\n            continue;\n        }\n        var _hash = void 0;\n        if (typeof args[i] !== 'object' && typeof args[i] !== 'function') {\n            // need to consider the case that args[i] is a string:\n            // args[i]        _hash\n            // \"undefined\" -> '\"undefined\"'\n            // undefined   -> 'undefined'\n            // 123         -> '123'\n            // \"null\"      -> '\"null\"'\n            if (typeof args[i] === 'string') {\n                _hash = '\"' + args[i] + '\"';\n            }\n            else {\n                _hash = String(args[i]);\n            }\n        }\n        else {\n            if (!table.has(args[i])) {\n                _hash = counter;\n                table.set(args[i], counter++);\n            }\n            else {\n                _hash = table.get(args[i]);\n            }\n        }\n        key += '@' + _hash;\n    }\n    return key;\n}\n","import hash from './libs/hash';\nvar Cache = /** @class */ (function () {\n    function Cache(initialData) {\n        if (initialData === void 0) { initialData = {}; }\n        this.cache = new Map(Object.entries(initialData));\n        this.subs = [];\n    }\n    Cache.prototype.get = function (key) {\n        var _key = this.serializeKey(key)[0];\n        return this.cache.get(_key);\n    };\n    Cache.prototype.set = function (key, value) {\n        var _key = this.serializeKey(key)[0];\n        this.cache.set(_key, value);\n        this.notify();\n    };\n    Cache.prototype.keys = function () {\n        return Array.from(this.cache.keys());\n    };\n    Cache.prototype.has = function (key) {\n        var _key = this.serializeKey(key)[0];\n        return this.cache.has(_key);\n    };\n    Cache.prototype.clear = function () {\n        this.cache.clear();\n        this.notify();\n    };\n    Cache.prototype.delete = function (key) {\n        var _key = this.serializeKey(key)[0];\n        this.cache.delete(_key);\n        this.notify();\n    };\n    // TODO: introduce namespace for the cache\n    Cache.prototype.serializeKey = function (key) {\n        var args = null;\n        if (typeof key === 'function') {\n            try {\n                key = key();\n            }\n            catch (err) {\n                // dependencies not ready\n                key = '';\n            }\n        }\n        if (Array.isArray(key)) {\n            // args array\n            args = key;\n            key = hash(key);\n        }\n        else {\n            // convert null to ''\n            key = String(key || '');\n        }\n        var errorKey = key ? 'err@' + key : '';\n        var isValidatingKey = key ? 'validating@' + key : '';\n        return [key, args, errorKey, isValidatingKey];\n    };\n    Cache.prototype.subscribe = function (listener) {\n        var _this = this;\n        if (typeof listener !== 'function') {\n            throw new Error('Expected the listener to be a function.');\n        }\n        var isSubscribed = true;\n        this.subs.push(listener);\n        return function () {\n            if (!isSubscribed)\n                return;\n            isSubscribed = false;\n            var index = _this.subs.indexOf(listener);\n            if (index > -1) {\n                _this.subs[index] = _this.subs[_this.subs.length - 1];\n                _this.subs.length--;\n            }\n        };\n    };\n    // Notify Cache subscribers about a change in the cache\n    Cache.prototype.notify = function () {\n        for (var _i = 0, _a = this.subs; _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener();\n        }\n    };\n    return Cache;\n}());\nexport default Cache;\n","/**\n * Due to bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a work around, we always assume it's online on first load, and change\n * the status upon `online` or `offline` events.\n */\nvar online = true;\nvar isOnline = function () { return online; };\nvar isDocumentVisible = function () {\n    if (typeof document !== 'undefined' &&\n        document.visibilityState !== undefined) {\n        return document.visibilityState !== 'hidden';\n    }\n    // always assume it's visible\n    return true;\n};\nvar fetcher = function (url) { return fetch(url).then(function (res) { return res.json(); }); };\nvar registerOnFocus = function (cb) {\n    if (typeof window !== 'undefined' &&\n        window.addEventListener !== undefined &&\n        typeof document !== 'undefined' &&\n        document.addEventListener !== undefined) {\n        // focus revalidate\n        document.addEventListener('visibilitychange', function () { return cb(); }, false);\n        window.addEventListener('focus', function () { return cb(); }, false);\n    }\n};\nvar registerOnReconnect = function (cb) {\n    if (typeof window !== 'undefined' && window.addEventListener !== undefined) {\n        // reconnect revalidate\n        window.addEventListener('online', function () {\n            online = true;\n            cb();\n        }, false);\n        // nothing to revalidate, just update the status\n        window.addEventListener('offline', function () { return (online = false); }, false);\n    }\n};\nexport default {\n    isOnline: isOnline,\n    isDocumentVisible: isDocumentVisible,\n    fetcher: fetcher,\n    registerOnFocus: registerOnFocus,\n    registerOnReconnect: registerOnReconnect\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport deepEqual from './libs/deep-equal';\nimport Cache from './cache';\nimport webPreset from './libs/web-preset';\n// cache\nvar cache = new Cache();\n// error retry\nfunction onErrorRetry(_, __, config, revalidate, opts) {\n    if (!config.isDocumentVisible()) {\n        // if it's hidden, stop\n        // it will auto revalidate when focus\n        return;\n    }\n    if (typeof config.errorRetryCount === 'number' &&\n        opts.retryCount > config.errorRetryCount) {\n        return;\n    }\n    // exponential backoff\n    var count = Math.min(opts.retryCount, 8);\n    var timeout = ~~((Math.random() + 0.5) * (1 << count)) * config.errorRetryInterval;\n    setTimeout(revalidate, timeout, opts);\n}\n// client side: need to adjust the config\n// based on the browser status\n// slow connection (<= 70Kbps)\nvar slowConnection = typeof window !== 'undefined' &&\n    // @ts-ignore\n    navigator['connection'] &&\n    // @ts-ignore\n    ['slow-2g', '2g'].indexOf(navigator['connection'].effectiveType) !== -1;\n// config\nvar defaultConfig = __assign({ \n    // events\n    onLoadingSlow: function () { }, onSuccess: function () { }, onError: function () { }, onErrorRetry: onErrorRetry, errorRetryInterval: (slowConnection ? 10 : 5) * 1000, focusThrottleInterval: 5 * 1000, dedupingInterval: 2 * 1000, loadingTimeout: (slowConnection ? 5 : 3) * 1000, refreshInterval: 0, revalidateOnFocus: true, revalidateOnReconnect: true, refreshWhenHidden: false, refreshWhenOffline: false, shouldRetryOnError: true, suspense: false, compare: deepEqual, isPaused: function () { return false; } }, webPreset);\nexport { cache };\nexport default defaultConfig;\n","import { useEffect, useLayoutEffect } from 'react';\nexport var IS_SERVER = typeof window === 'undefined' ||\n    // @ts-ignore\n    !!(typeof Deno !== 'undefined' && Deno && Deno.version && Deno.version.deno);\n// polyfill for requestAnimationFrame\nexport var rAF = IS_SERVER\n    ? null\n    : window['requestAnimationFrame']\n        ? function (f) { return window['requestAnimationFrame'](f); }\n        : function (f) { return setTimeout(f, 1); };\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nexport var useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n","import { createContext } from 'react';\nvar SWRConfigContext = createContext({});\nSWRConfigContext.displayName = 'SWRConfigContext';\nexport default SWRConfigContext;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n// TODO: use @ts-expect-error\nimport { useCallback, useContext, useState, useRef, useMemo, useDebugValue } from 'react';\nimport defaultConfig, { cache } from './config';\nimport { IS_SERVER, rAF, useIsomorphicLayoutEffect } from './env';\nimport SWRConfigContext from './swr-config-context';\n// global state managers\nvar CONCURRENT_PROMISES = {};\nvar CONCURRENT_PROMISES_TS = {};\nvar FOCUS_REVALIDATORS = {};\nvar RECONNECT_REVALIDATORS = {};\nvar CACHE_REVALIDATORS = {};\nvar MUTATION_TS = {};\nvar MUTATION_END_TS = {};\n// generate strictly increasing timestamps\nvar now = (function () {\n    var ts = 0;\n    return function () { return ++ts; };\n})();\n// setup DOM events listeners for `focus` and `reconnect` actions\nif (!IS_SERVER) {\n    var revalidate_1 = function (revalidators) {\n        if (!defaultConfig.isDocumentVisible() || !defaultConfig.isOnline())\n            return;\n        for (var key in revalidators) {\n            if (revalidators[key][0])\n                revalidators[key][0]();\n        }\n    };\n    if (typeof defaultConfig.registerOnFocus === 'function') {\n        defaultConfig.registerOnFocus(function () { return revalidate_1(FOCUS_REVALIDATORS); });\n    }\n    if (typeof defaultConfig.registerOnReconnect === 'function') {\n        defaultConfig.registerOnReconnect(function () { return revalidate_1(RECONNECT_REVALIDATORS); });\n    }\n}\nvar trigger = function (_key, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    // we are ignoring the second argument which correspond to the arguments\n    // the fetcher will receive when key is an array\n    var _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2], keyValidating = _a[3];\n    if (!key)\n        return Promise.resolve();\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        var currentData = cache.get(key);\n        var currentError = cache.get(keyErr);\n        var currentIsValidating = cache.get(keyValidating);\n        var promises = [];\n        for (var i = 0; i < updaters.length; ++i) {\n            promises.push(updaters[i](shouldRevalidate, currentData, currentError, currentIsValidating, i > 0));\n        }\n        // return new updated value\n        return Promise.all(promises).then(function () { return cache.get(key); });\n    }\n    return Promise.resolve(cache.get(key));\n};\nvar broadcastState = function (key, data, error, isValidating) {\n    var updaters = CACHE_REVALIDATORS[key];\n    if (key && updaters) {\n        for (var i = 0; i < updaters.length; ++i) {\n            updaters[i](false, data, error, isValidating);\n        }\n    }\n};\nvar mutate = function (_key, _data, shouldRevalidate) {\n    if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var _a, key, keyErr, beforeMutationTs, beforeConcurrentPromisesTs, data, error, isAsyncMutation, err_1, shouldAbort, updaters, promises, i;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _a = cache.serializeKey(_key), key = _a[0], keyErr = _a[2];\n                    if (!key)\n                        return [2 /*return*/];\n                    // if there is no new data to update, let's just revalidate the key\n                    if (typeof _data === 'undefined')\n                        return [2 /*return*/, trigger(_key, shouldRevalidate)\n                            // update global timestamps\n                        ];\n                    // update global timestamps\n                    MUTATION_TS[key] = now() - 1;\n                    MUTATION_END_TS[key] = 0;\n                    beforeMutationTs = MUTATION_TS[key];\n                    beforeConcurrentPromisesTs = CONCURRENT_PROMISES_TS[key];\n                    isAsyncMutation = false;\n                    if (_data && typeof _data === 'function') {\n                        // `_data` is a function, call it passing current cache value\n                        try {\n                            _data = _data(cache.get(key));\n                        }\n                        catch (err) {\n                            // if `_data` function throws an error synchronously, it shouldn't be cached\n                            _data = undefined;\n                            error = err;\n                        }\n                    }\n                    if (!(_data && typeof _data.then === 'function')) return [3 /*break*/, 5];\n                    // `_data` is a promise\n                    isAsyncMutation = true;\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, _data];\n                case 2:\n                    data = _b.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    err_1 = _b.sent();\n                    error = err_1;\n                    return [3 /*break*/, 4];\n                case 4: return [3 /*break*/, 6];\n                case 5:\n                    data = _data;\n                    _b.label = 6;\n                case 6:\n                    shouldAbort = function () {\n                        // check if other mutations have occurred since we've started this mutation\n                        if (beforeMutationTs !== MUTATION_TS[key] ||\n                            beforeConcurrentPromisesTs !== CONCURRENT_PROMISES_TS[key]) {\n                            if (error)\n                                throw error;\n                            return true;\n                        }\n                    };\n                    // if there's a race we don't update cache or broadcast change, just return the data\n                    if (shouldAbort())\n                        return [2 /*return*/, data];\n                    if (typeof data !== 'undefined') {\n                        // update cached data\n                        cache.set(key, data);\n                    }\n                    // always update or reset the error\n                    cache.set(keyErr, error);\n                    // reset the timestamp to mark the mutation has ended\n                    MUTATION_END_TS[key] = now() - 1;\n                    if (!isAsyncMutation) {\n                        // we skip broadcasting if there's another mutation happened synchronously\n                        if (shouldAbort())\n                            return [2 /*return*/, data];\n                    }\n                    updaters = CACHE_REVALIDATORS[key];\n                    if (updaters) {\n                        promises = [];\n                        for (i = 0; i < updaters.length; ++i) {\n                            promises.push(updaters[i](!!shouldRevalidate, data, error, undefined, i > 0));\n                        }\n                        // return new updated value\n                        return [2 /*return*/, Promise.all(promises).then(function () {\n                                if (error)\n                                    throw error;\n                                return cache.get(key);\n                            })];\n                    }\n                    // throw error or return data to be used by caller of mutate\n                    if (error)\n                        throw error;\n                    return [2 /*return*/, data];\n            }\n        });\n    });\n};\nfunction useSWR() {\n    var _this = this;\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var _key = args[0];\n    var config = Object.assign({}, defaultConfig, useContext(SWRConfigContext), args.length > 2\n        ? args[2]\n        : args.length === 2 && typeof args[1] === 'object'\n            ? args[1]\n            : {});\n    // in typescript args.length > 2 is not same as args.lenth === 3\n    // we do a safe type assertion here\n    // args.length === 3\n    var fn = (args.length > 2\n        ? args[1]\n        : args.length === 2 && typeof args[1] === 'function'\n            ? args[1]\n            : /**\n                  pass fn as null will disable revalidate\n                  https://paco.sh/blog/shared-hook-state-with-swr\n                */\n                args[1] === null\n                    ? args[1]\n                    : config.fetcher);\n    // we assume `key` as the identifier of the request\n    // `key` can change but `fn` shouldn't\n    // (because `revalidate` only depends on `key`)\n    // `keyErr` is the cache key for error objects\n    var _a = cache.serializeKey(_key), key = _a[0], fnArgs = _a[1], keyErr = _a[2], keyValidating = _a[3];\n    var configRef = useRef(config);\n    useIsomorphicLayoutEffect(function () {\n        configRef.current = config;\n    });\n    var willRevalidateOnMount = function () {\n        return (config.revalidateOnMount ||\n            (!config.initialData && config.revalidateOnMount === undefined));\n    };\n    var resolveData = function () {\n        var cachedData = cache.get(key);\n        return typeof cachedData === 'undefined' ? config.initialData : cachedData;\n    };\n    var resolveIsValidating = function () {\n        return !!cache.get(keyValidating) || (key && willRevalidateOnMount());\n    };\n    var initialData = resolveData();\n    var initialError = cache.get(keyErr);\n    var initialIsValidating = resolveIsValidating();\n    // if a state is accessed (data, error or isValidating),\n    // we add the state to dependencies so if the state is\n    // updated in the future, we can trigger a rerender\n    var stateDependencies = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    var stateRef = useRef({\n        data: initialData,\n        error: initialError,\n        isValidating: initialIsValidating\n    });\n    // display the data label in the React DevTools next to SWR hooks\n    useDebugValue(stateRef.current.data);\n    var rerender = useState({})[1];\n    var dispatch = useCallback(function (payload) {\n        var shouldUpdateState = false;\n        for (var k in payload) {\n            // @ts-ignore\n            if (stateRef.current[k] === payload[k]) {\n                continue;\n            }\n            // @ts-ignore\n            stateRef.current[k] = payload[k];\n            // @ts-ignore\n            if (stateDependencies.current[k]) {\n                shouldUpdateState = true;\n            }\n        }\n        if (shouldUpdateState) {\n            // if component is unmounted, should skip rerender\n            // if component is not mounted, should skip rerender\n            if (unmountedRef.current || !initialMountedRef.current)\n                return;\n            rerender({});\n        }\n    }, \n    // config.suspense isn't allowed to change during the lifecycle\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // error ref inside revalidate (is last request errored?)\n    var unmountedRef = useRef(false);\n    var keyRef = useRef(key);\n    // check if component is mounted in suspense mode\n    var initialMountedRef = useRef(false);\n    // do unmount check for callbacks\n    var eventsCallback = useCallback(function (event) {\n        var _a;\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        if (unmountedRef.current)\n            return;\n        if (!initialMountedRef.current)\n            return;\n        if (key !== keyRef.current)\n            return;\n        // @ts-ignore\n        (_a = configRef.current)[event].apply(_a, params);\n    }, [key]);\n    var boundMutate = useCallback(function (data, shouldRevalidate) {\n        return mutate(keyRef.current, data, shouldRevalidate);\n    }, []);\n    var addRevalidator = function (revalidators, callback) {\n        if (!revalidators[key]) {\n            revalidators[key] = [callback];\n        }\n        else {\n            revalidators[key].push(callback);\n        }\n        return function () {\n            var keyedRevalidators = revalidators[key];\n            var index = keyedRevalidators.indexOf(callback);\n            if (index >= 0) {\n                // O(1): faster than splice\n                keyedRevalidators[index] =\n                    keyedRevalidators[keyedRevalidators.length - 1];\n                keyedRevalidators.pop();\n            }\n        };\n    };\n    // start a revalidation\n    var revalidate = useCallback(function (revalidateOpts) {\n        if (revalidateOpts === void 0) { revalidateOpts = {}; }\n        return __awaiter(_this, void 0, void 0, function () {\n            var _a, retryCount, _b, dedupe, loading, shouldDeduping, newData, startAt, newState, err_2;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!key || !fn)\n                            return [2 /*return*/, false];\n                        if (unmountedRef.current)\n                            return [2 /*return*/, false];\n                        if (configRef.current.isPaused())\n                            return [2 /*return*/, false];\n                        _a = revalidateOpts.retryCount, retryCount = _a === void 0 ? 0 : _a, _b = revalidateOpts.dedupe, dedupe = _b === void 0 ? false : _b;\n                        loading = true;\n                        shouldDeduping = typeof CONCURRENT_PROMISES[key] !== 'undefined' && dedupe;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 6, , 7]);\n                        dispatch({\n                            isValidating: true\n                        });\n                        cache.set(keyValidating, true);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, stateRef.current.data, stateRef.current.error, true);\n                        }\n                        newData = void 0;\n                        startAt = void 0;\n                        if (!shouldDeduping) return [3 /*break*/, 3];\n                        // there's already an ongoing request,\n                        // this one needs to be deduplicated.\n                        startAt = CONCURRENT_PROMISES_TS[key];\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 2:\n                        newData = _c.sent();\n                        return [3 /*break*/, 5];\n                    case 3:\n                        // if no cache being rendered currently (it shows a blank page),\n                        // we trigger the loading slow event.\n                        if (config.loadingTimeout && !cache.get(key)) {\n                            setTimeout(function () {\n                                if (loading)\n                                    eventsCallback('onLoadingSlow', key, config);\n                            }, config.loadingTimeout);\n                        }\n                        if (fnArgs !== null) {\n                            CONCURRENT_PROMISES[key] = fn.apply(void 0, fnArgs);\n                        }\n                        else {\n                            CONCURRENT_PROMISES[key] = fn(key);\n                        }\n                        CONCURRENT_PROMISES_TS[key] = startAt = now();\n                        return [4 /*yield*/, CONCURRENT_PROMISES[key]];\n                    case 4:\n                        newData = _c.sent();\n                        setTimeout(function () {\n                            delete CONCURRENT_PROMISES[key];\n                            delete CONCURRENT_PROMISES_TS[key];\n                        }, config.dedupingInterval);\n                        // trigger the success event,\n                        // only do this for the original request.\n                        eventsCallback('onSuccess', newData, key, config);\n                        _c.label = 5;\n                    case 5:\n                        // if there're other ongoing request(s), started after the current one,\n                        // we need to ignore the current one to avoid possible race conditions:\n                        //   req1------------------>res1        (current one)\n                        //        req2---------------->res2\n                        // the request that fired later will always be kept.\n                        if (CONCURRENT_PROMISES_TS[key] > startAt) {\n                            return [2 /*return*/, false];\n                        }\n                        // if there're other mutations(s), overlapped with the current revalidation:\n                        // case 1:\n                        //   req------------------>res\n                        //       mutate------>end\n                        // case 2:\n                        //         req------------>res\n                        //   mutate------>end\n                        // case 3:\n                        //   req------------------>res\n                        //       mutate-------...---------->\n                        // we have to ignore the revalidation result (res) because it's no longer fresh.\n                        // meanwhile, a new revalidation should be triggered when the mutation ends.\n                        if (MUTATION_TS[key] &&\n                            // case 1\n                            (startAt <= MUTATION_TS[key] ||\n                                // case 2\n                                startAt <= MUTATION_END_TS[key] ||\n                                // case 3\n                                MUTATION_END_TS[key] === 0)) {\n                            dispatch({ isValidating: false });\n                            return [2 /*return*/, false];\n                        }\n                        cache.set(keyErr, undefined);\n                        cache.set(keyValidating, false);\n                        newState = {\n                            isValidating: false\n                        };\n                        if (typeof stateRef.current.error !== 'undefined') {\n                            // we don't have an error\n                            newState.error = undefined;\n                        }\n                        if (!config.compare(stateRef.current.data, newData)) {\n                            // deep compare to avoid extra re-render\n                            // data changed\n                            newState.data = newData;\n                            cache.set(key, newData);\n                        }\n                        // merge the new state\n                        dispatch(newState);\n                        if (!shouldDeduping) {\n                            // also update other hooks\n                            broadcastState(key, newData, newState.error, false);\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        err_2 = _c.sent();\n                        delete CONCURRENT_PROMISES[key];\n                        delete CONCURRENT_PROMISES_TS[key];\n                        if (configRef.current.isPaused()) {\n                            dispatch({\n                                isValidating: false\n                            });\n                            return [2 /*return*/, false];\n                        }\n                        cache.set(keyErr, err_2);\n                        // get a new error\n                        // don't use deep equal for errors\n                        if (stateRef.current.error !== err_2) {\n                            // we keep the stale data\n                            dispatch({\n                                isValidating: false,\n                                error: err_2\n                            });\n                            if (!shouldDeduping) {\n                                // also broadcast to update other hooks\n                                broadcastState(key, undefined, err_2, false);\n                            }\n                        }\n                        // events and retry\n                        eventsCallback('onError', err_2, key, config);\n                        if (config.shouldRetryOnError) {\n                            // when retrying, we always enable deduping\n                            eventsCallback('onErrorRetry', err_2, key, config, revalidate, {\n                                retryCount: retryCount + 1,\n                                dedupe: true\n                            });\n                        }\n                        return [3 /*break*/, 7];\n                    case 7:\n                        loading = false;\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    }, \n    // dispatch is immutable, and `eventsCallback`, `fnArgs`, `keyErr`, and `keyValidating` are based on `key`,\n    // so we can them from the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // useSWR('key', () => fetch('/api/'), { suspense: true })\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [key]);\n    // mounted (client side rendering)\n    useIsomorphicLayoutEffect(function () {\n        if (!key)\n            return undefined;\n        // after `key` updates, we need to mark it as mounted\n        unmountedRef.current = false;\n        var isUpdating = initialMountedRef.current;\n        initialMountedRef.current = true;\n        // after the component is mounted (hydrated),\n        // we need to update the data from the cache\n        // and trigger a revalidation\n        var currentHookData = stateRef.current.data;\n        var latestKeyedData = resolveData();\n        // update the state if the key changed (not the inital render) or cache updated\n        keyRef.current = key;\n        if (!config.compare(currentHookData, latestKeyedData)) {\n            dispatch({ data: latestKeyedData });\n        }\n        // revalidate with deduping\n        var softRevalidate = function () { return revalidate({ dedupe: true }); };\n        // trigger a revalidation\n        if (isUpdating || willRevalidateOnMount()) {\n            if (typeof latestKeyedData !== 'undefined' && !IS_SERVER) {\n                // delay revalidate if there's cache\n                // to not block the rendering\n                // @ts-ignore it's safe to use requestAnimationFrame in browser\n                rAF(softRevalidate);\n            }\n            else {\n                softRevalidate();\n            }\n        }\n        var pending = false;\n        var onFocus = function () {\n            if (pending || !configRef.current.revalidateOnFocus)\n                return;\n            pending = true;\n            softRevalidate();\n            setTimeout(function () { return (pending = false); }, configRef.current.focusThrottleInterval);\n        };\n        var onReconnect = function () {\n            if (configRef.current.revalidateOnReconnect) {\n                softRevalidate();\n            }\n        };\n        // register global cache update listener\n        var onUpdate = function (shouldRevalidate, updatedData, updatedError, updatedIsValidating, dedupe) {\n            if (shouldRevalidate === void 0) { shouldRevalidate = true; }\n            if (dedupe === void 0) { dedupe = true; }\n            // update hook state\n            var newState = {};\n            var needUpdate = false;\n            if (typeof updatedData !== 'undefined' &&\n                !config.compare(stateRef.current.data, updatedData)) {\n                newState.data = updatedData;\n                needUpdate = true;\n            }\n            // always update error\n            // because it can be `undefined`\n            if (stateRef.current.error !== updatedError) {\n                newState.error = updatedError;\n                needUpdate = true;\n            }\n            if (typeof updatedIsValidating !== 'undefined' &&\n                stateRef.current.isValidating !== updatedIsValidating) {\n                newState.isValidating = updatedIsValidating;\n                needUpdate = true;\n            }\n            if (needUpdate) {\n                dispatch(newState);\n            }\n            if (shouldRevalidate) {\n                if (dedupe) {\n                    return softRevalidate();\n                }\n                else {\n                    return revalidate();\n                }\n            }\n            return false;\n        };\n        var unsubFocus = addRevalidator(FOCUS_REVALIDATORS, onFocus);\n        var unsubReconnect = addRevalidator(RECONNECT_REVALIDATORS, onReconnect);\n        var unsubUpdate = addRevalidator(CACHE_REVALIDATORS, onUpdate);\n        return function () {\n            // cleanup\n            dispatch = function () { return null; };\n            // mark it as unmounted\n            unmountedRef.current = true;\n            unsubFocus();\n            unsubReconnect();\n            unsubUpdate();\n        };\n    }, [key, revalidate]);\n    useIsomorphicLayoutEffect(function () {\n        var timer = null;\n        var tick = function () { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!stateRef.current.error &&\n                            (configRef.current.refreshWhenHidden ||\n                                configRef.current.isDocumentVisible()) &&\n                            (configRef.current.refreshWhenOffline || configRef.current.isOnline()))) return [3 /*break*/, 2];\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        return [4 /*yield*/, revalidate({ dedupe: true })];\n                    case 1:\n                        // only revalidate when the page is visible\n                        // if API request errored, we stop polling in this round\n                        // and let the error retry function handle it\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        // Read the latest refreshInterval\n                        if (configRef.current.refreshInterval && timer) {\n                            timer = setTimeout(tick, configRef.current.refreshInterval);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        if (configRef.current.refreshInterval) {\n            timer = setTimeout(tick, configRef.current.refreshInterval);\n        }\n        return function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n    }, [\n        config.refreshInterval,\n        config.refreshWhenHidden,\n        config.refreshWhenOffline,\n        revalidate\n    ]);\n    // suspense\n    var latestData;\n    var latestError;\n    if (config.suspense) {\n        // in suspense mode, we can't return empty state\n        // (it should be suspended)\n        // try to get data and error from cache\n        latestData = cache.get(key);\n        latestError = cache.get(keyErr);\n        if (typeof latestData === 'undefined') {\n            latestData = initialData;\n        }\n        if (typeof latestError === 'undefined') {\n            latestError = initialError;\n        }\n        if (typeof latestData === 'undefined' &&\n            typeof latestError === 'undefined') {\n            // need to start the request if it hasn't\n            if (!CONCURRENT_PROMISES[key]) {\n                // trigger revalidate immediately\n                // to get the promise\n                // in this revalidate, should not rerender\n                revalidate();\n            }\n            if (CONCURRENT_PROMISES[key] &&\n                typeof CONCURRENT_PROMISES[key].then === 'function') {\n                // if it is a promise\n                throw CONCURRENT_PROMISES[key];\n            }\n            // it's a value, return it directly (override)\n            latestData = CONCURRENT_PROMISES[key];\n        }\n        if (typeof latestData === 'undefined' && latestError) {\n            // in suspense mode, throw error if there's no content\n            throw latestError;\n        }\n    }\n    // define returned state\n    // can be memorized since the state is a ref\n    var memoizedState = useMemo(function () {\n        // revalidate will be deprecated in the 1.x release\n        // because mutate() covers the same use case of revalidate().\n        // This remains only for backward compatibility\n        var state = { revalidate: revalidate, mutate: boundMutate };\n        Object.defineProperties(state, {\n            error: {\n                // `key` might be changed in the upcoming hook re-render,\n                // but the previous state will stay\n                // so we need to match the latest key and data (fallback to `initialData`)\n                get: function () {\n                    stateDependencies.current.error = true;\n                    if (config.suspense) {\n                        return latestError;\n                    }\n                    return keyRef.current === key ? stateRef.current.error : initialError;\n                },\n                enumerable: true\n            },\n            data: {\n                get: function () {\n                    stateDependencies.current.data = true;\n                    if (config.suspense) {\n                        return latestData;\n                    }\n                    return keyRef.current === key ? stateRef.current.data : initialData;\n                },\n                enumerable: true\n            },\n            isValidating: {\n                get: function () {\n                    stateDependencies.current.isValidating = true;\n                    return key ? stateRef.current.isValidating : false;\n                },\n                enumerable: true\n            }\n        });\n        return state;\n        // `config.suspense` isn't allowed to change during the lifecycle.\n        // `boundMutate` is immutable, and the immutability of `revalidate` depends on `key`\n        // so we can omit them from the deps array,\n        // but we put it to enable react-hooks/exhaustive-deps rule.\n        // `initialData` and `initialError` are not initial values\n        // because they are changed during the lifecycle\n        // so we should add them in the deps array.\n    }, [\n        revalidate,\n        initialData,\n        initialError,\n        boundMutate,\n        key,\n        config.suspense,\n        latestError,\n        latestData\n    ]);\n    return memoizedState;\n}\nObject.defineProperty(SWRConfigContext.Provider, 'default', {\n    value: defaultConfig\n});\nvar SWRConfig = SWRConfigContext.Provider;\nexport { trigger, mutate, SWRConfig };\nexport default useSWR;\n","// `useSWR` and related APIs\nimport { default as useSWR } from './use-swr';\nexport default useSWR;\nexport * from './use-swr';\n// `useSWRInfinite`\nexport { useSWRInfinite } from './use-swr-infinite';\n// Cache related, to be replaced by the new APIs\nexport { cache } from './config';\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}